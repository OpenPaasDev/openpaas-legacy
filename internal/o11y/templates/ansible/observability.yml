- hosts: prometheus 
  become: yes
  tasks:
    - name: Creates config dir
      file:
        path: /etc/nomad.d
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Creates certs dir
      file:
        path: /etc/nomad.d/certs
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy client.pem
      copy:
        src: secrets/nomad/client.pem
        dest: /etc/nomad.d/certs/client.pem
        mode: 0644
    - name: copy client-key.pem
      copy:
        src: secrets/nomad/client-key.pem
        dest: /etc/nomad.d/certs/client-key.pem
        mode: 0644
- hosts: grafana
  become: yes
  tasks:
    - name: Add Grafana signing key
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present
    - name: Add Grafana to apt list
      ansible.builtin.apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present
    - name: ensure apt cache is updated
      action: apt update_cache=yes
    - name: Upgrade the OS (apt-get dist-upgrade)
      apt:
        upgrade: dist
    - name: ensure all software is installed
      action: apt name={{item}}
      with_items:
        - grafana
    - name: start grafana service on boot
      ansible.builtin.systemd:
        enabled: yes
        name: grafana-server
    - name: Restart grafana service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name:  grafana-server
- hosts: loki
  become: yes
  tasks:
    - name: add group loki
      group: name='loki'
    - name: add loki user
      user: name='loki' groups="loki"  
    - name: download loki
      ansible.builtin.command: wget https://github.com/grafana/loki/releases/download/v2.6.1/loki-linux-amd64.zip
    - unarchive:
        src: '{{cloud_provider_config.sudo_dir}}/loki-linux-amd64.zip'
        dest: /usr/local/bin/
        remote_src: True
        mode: 0755
    - name: privileges on loki binary
      ansible.builtin.command: chmod 755 /usr/local/bin/loki-linux-amd64
    - name: Creates loki dir
      file:
        path: /etc/loki
        state: directory
        owner: loki
        group: loki
        mode: 0755
    - name: Creates loki data dir
      file:
        path: /opt/loki
        state: directory
        owner: loki
        group: loki
        mode: 0755
    - name: copy loki config
      template:
        src: loki/loki-config.yml
        dest: /etc/loki/loki-config.yml
        owner: loki
        group: loki
        mode: 0755
    - name: copy service
      copy:
        src: loki/loki.service
        dest: /etc/systemd/system/loki.service
        mode: 0755
    - name: start loki agent service on boot
      ansible.builtin.systemd:
        enabled: yes
        name: loki.service
    - name: Restart loki service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name:  loki.service
- hosts: prometheus
  become: yes
  tasks:
    - name: add group prometheus
      group: name='prometheus'
    - name: add prometheus user
      user: name='prometheus' groups="prometheus"  
    - name: Creates conf dir
      file:
        path: /etc/prometheus
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755
    - name: Creates data dir
      file:
        path: /var/lib/prometheus
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755
    - name: Creates data 2 dir
      file:
        path: /etc/prometheus/files_sd
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755
    - name: Creates data 3 dir
      file:
        path: /etc/prometheus/rules
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755
    - name: Creates data 4 dir
      file:
        path: /etc/prometheus/rules.d
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755
    - name: copy install script for prometheus
      copy:
        src: prometheus/install-prometheus.sh
        dest: '{{cloud_provider_config.sudo_dir}}/install-prometheus.sh'
        mode: 0755
    - name: install prometheus
      ansible.builtin.command: ./install-prometheus.sh
    - name: copy service
      copy:
        src: prometheus/prometheus.service
        dest: /etc/systemd/system/prometheus.service
        mode: 0755
    - name: copy prom config
      template:
        src: prometheus/prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: 0755
    - name: start prometheus agent service on boot
      ansible.builtin.systemd:
        enabled: yes
        name: prometheus.service
    - name: Restart prometheus service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name:  prometheus.service
- hosts: clients,nomad_servers
  become: yes
  tasks:
    - name: copy loki script
      copy:
        src: loki/setup-loki-agent.sh
        dest: '{{cloud_provider_config.sudo_dir}}/setup-loki-agent.sh'
        mode: 0755
    - name: install Loki agent
      ansible.builtin.command: ./setup-loki-agent.sh
    - name: Creates prom dir
      file:
        path: /etc/prom
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy promtail.yml
      copy:
        src: loki/promtail.yml
        dest: /etc/prom/promtail.yml
        mode: 0755
    - name: copy service
      copy:
        src: loki/promtail.service
        dest: /etc/systemd/system/promtail.service
        mode: 0755
    - name: start promtail agent service on boot
      ansible.builtin.systemd:
        enabled: yes
        name: promtail.service
    - name: Restart promtail service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name:  promtail
- hosts: tempo
  become: yes
  tasks:
    - name: copy tempo script
      copy:
        src: tempo/setup-tempo.sh
        dest: '{{cloud_provider_config.sudo_dir}}/setup-tempo.sh'
        mode: 0755
    - name: install tempo agent
      ansible.builtin.command: ./setup-tempo.sh
    - name: Creates prom dir
      file:
        path: /etc/tempo
        state: directory
        mode: 0755
    - name: copy tempo.yml
      template:
        src: tempo/tempo.yml
        dest: /etc/tempo/tempo.yml
        mode: 0755
    - name: copy service
      copy:
        src: tempo/tempo.service
        dest: /etc/systemd/system/tempo.service
        mode: 0755
    - name: start tempo agent service on boot
      ansible.builtin.systemd:
        enabled: yes
        name: tempo.service
    - name: Restart tempo service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name:  tempo