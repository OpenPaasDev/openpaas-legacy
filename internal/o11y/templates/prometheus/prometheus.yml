# my global config
global:
  scrape_interval: 60s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 60s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]
  - job_name: integrations/nomad
    metrics_path: /v1/metrics
    scheme: https
    tls_config:
      cert_file: /etc/nomad.d/certs/client.pem
      key_file: /etc/nomad.d/certs/client-key.pem
      insecure_skip_verify: true
    params:
      format:
      - prometheus
    static_configs:
    - targets:{{ range $key, $value := .NomadHosts }}
      - {{$value}}:4646{{ end }}
  - job_name: integrations/node_exporter
    metrics_path: /metrics
    scheme: http
    params:
      format:
      - prometheus
    static_configs:
    - targets:{{ range $key, $value := .AllHosts }}
      - {{$value}}:9100{{ end }}
  - job_name: integrations/consul
    metrics_path: /metrics
    params:
      format:
      - prometheus
    static_configs:
    - targets:{{ range $key, $value := .ConsulHosts }}
      - {{$value}}:9107{{end }}
  - job_name: services
    consul_sd_configs:
      - server: 'consul.service.consul:8500'
        token: {{.ConsulToken}}
        tags:
          - prometheus
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: service